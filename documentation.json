{
    "pipes": [],
    "interfaces": [
        {
            "name": "AuthState",
            "id": "interface-AuthState-43e2d14b2f335cce977c4e72c7e6a606",
            "file": "src/app/project/auth/auth.store.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "token",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "extends": "JUser"
        },
        {
            "name": "ButtonProps",
            "id": "interface-ButtonProps-80336ca223ec2db03b581e9533ee38c2",
            "file": "src/app/control/button/button.stories.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "extends": "ButtonComponent"
        },
        {
            "name": "EnvironmentModel",
            "id": "interface-EnvironmentModel-c0087a9667cca7c104b85aa4bebc9698",
            "file": "src/environments/environment-model.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "apiUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "production",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "FilterState",
            "id": "interface-FilterState-61b8d70b995b6ead96560e5ae3bd42b2",
            "file": "src/app/project/state/filter/filter.store.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "ignoreResolved",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "onlyMyIssue",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "searchTerm",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "userIds",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "JIssue",
            "id": "interface-JIssue-18691b20c62af7cf438eda67fbb39ac5",
            "file": "src/app/interface/issue.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "comments",
                    "type": "JComment[]",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "createdAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "estimate",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "listPosition",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "priority",
                    "type": "IssuePriority",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "projectId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "reporterId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "status",
                    "type": "IssueStatus",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "timeRemaining",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "timeSpent",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "type",
                    "type": "IssueType",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "updatedAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "userIds",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "JProject",
            "id": "interface-JProject-1cf30876bbb3a088d4b5b6da1244de47",
            "file": "src/app/interface/project.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "category",
                    "type": "ProjectCategory",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "createdAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "issues",
                    "type": "JIssue[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "updateAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "users",
                    "type": "JUser[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "JUser",
            "id": "interface-JUser-2207c79e376d3d49816e198842f0dcc8",
            "file": "src/app/interface/user.ts",
            "type": "interface",
            "properties": [
                {
                    "name": "avatarUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "createdAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "issueIds",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "updatedAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ProjectState",
            "id": "interface-ProjectState-d58ea2017d2feb69d516eef24e846b30",
            "file": "src/app/project/state/project/project.store.ts",
            "type": "interface",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "JProject"
        }
    ],
    "injectables": [
        {
            "name": "AuthQuery",
            "id": "injectable-AuthQuery-45e7b85ed585785ad8c46da1cb311e80",
            "file": "src/app/project/auth/auth.query.ts",
            "properties": [
                {
                    "name": "user$",
                    "defaultValue": "this.select()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "userId$",
                    "defaultValue": "this.select('id')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "AuthStore"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "AuthStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Query",
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-a97ceeda1662316451e042e102b84ebe",
            "file": "src/app/project/auth/auth.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "type": "LoginPayload"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "type": "LoginPayload",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient"
                    },
                    {
                        "name": "_store",
                        "type": "AuthStore"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "AuthStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthStore",
            "id": "injectable-AuthStore-43e2d14b2f335cce977c4e72c7e6a606",
            "file": "src/app/project/auth/auth.store.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "extends": "Store",
            "type": "injectable"
        },
        {
            "name": "FilterQuery",
            "id": "injectable-FilterQuery-8121d38b9231121af2f70b638b15850b",
            "file": "src/app/project/state/filter/filter.query.ts",
            "properties": [
                {
                    "name": "all$",
                    "defaultValue": "this.select()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "any$",
                    "defaultValue": "this.select(({ searchTerm, userIds, onlyMyIssue, ignoreResolved }) => {\n    return !!searchTerm || !!userIds?.length || onlyMyIssue || ignoreResolved;\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "ignoreResolve$",
                    "defaultValue": "this.select('ignoreResolved')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "onlyMyIssue$",
                    "defaultValue": "this.select('onlyMyIssue')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "userIds$",
                    "defaultValue": "this.select('userIds')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "FilterStore"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "FilterStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Query",
            "type": "injectable"
        },
        {
            "name": "FilterService",
            "id": "injectable-FilterService-e29699842ad56c064296183688615aca",
            "file": "src/app/project/state/filter/filter.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resetAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                },
                {
                    "name": "toggleIgnoreResolve",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "toggleOnlyMyIssue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "toggleUserId",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSearchTerm",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "FilterStore"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "FilterStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FilterStore",
            "id": "injectable-FilterStore-61b8d70b995b6ead96560e5ae3bd42b2",
            "file": "src/app/project/state/filter/filter.store.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "extends": "Store",
            "type": "injectable"
        },
        {
            "name": "GoogleAnalyticsService",
            "id": "injectable-GoogleAnalyticsService-9088c886dc4afa5810bfb1ecfcb12add",
            "file": "src/app/core/services/google-analytics.service.ts",
            "properties": [
                {
                    "name": "gtag",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sendEvent",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "sendPageView",
                    "args": [
                        {
                            "name": "url",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "ProjectQuery",
            "id": "injectable-ProjectQuery-5043c96ae676ad526dce8352ec24bc70",
            "file": "src/app/project/state/project/project.query.ts",
            "properties": [
                {
                    "name": "all$",
                    "defaultValue": "this.select()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isLoading$",
                    "defaultValue": "this.selectLoading()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "issueByStatusSorted$",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "issues$",
                    "defaultValue": "this.select('issues')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "lastIssuePosition",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "users$",
                    "defaultValue": "this.select('users')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "issueById$",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "ProjectStore"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "ProjectStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Query",
            "type": "injectable"
        },
        {
            "name": "ProjectService",
            "id": "injectable-ProjectService-1a8ef3c3bb947d62d7043d9a2f1fc068",
            "file": "src/app/project/state/project/project.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "deleteIssue",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "isLoading",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "isLoading",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateIssue",
                    "args": [
                        {
                            "name": "issue",
                            "type": "JIssue"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "issue",
                            "type": "JIssue",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateIssueComment",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "string"
                        },
                        {
                            "name": "comment",
                            "type": "JComment"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "comment",
                            "type": "JComment",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProject",
                    "args": [
                        {
                            "name": "project",
                            "type": "Partial<JProject>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "Partial<JProject>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient"
                    },
                    {
                        "name": "_store",
                        "type": "ProjectStore"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "ProjectStore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProjectStore",
            "id": "injectable-ProjectStore-d58ea2017d2feb69d516eef24e846b30",
            "file": "src/app/project/state/project/project.store.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 20
            },
            "extends": "Store",
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DateUtil",
            "id": "class-DateUtil-4bbb3108e7289db7e47792362ca29fef",
            "file": "src/app/project/utils/date.ts",
            "type": "class",
            "properties": [],
            "methods": [
                {
                    "name": "getNow",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 2,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DeleteIssueModel",
            "id": "class-DeleteIssueModel-d37f5ed366d0e5481c64f3acc0f5290f",
            "file": "src/app/interface/ui-model/delete-issue-model.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "issueId",
                        "type": "string"
                    },
                    {
                        "name": "deleteModalRef",
                        "type": "NzModalRef"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "issueId",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "deleteModalRef",
                        "type": "NzModalRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "deleteModalRef",
                    "type": "NzModalRef",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "issueId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IssuePriorityIcon",
            "id": "class-IssuePriorityIcon-d6b32ca79d21476cef402416c98b72b4",
            "file": "src/app/interface/issue-priority-icon.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "issuePriority",
                        "type": "IssuePriority"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "issuePriority",
                        "type": "IssuePriority",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "color",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IssueStatusValueTitle",
            "id": "class-IssueStatusValueTitle-ea607f15ec592d16f5e9fff2e7116945",
            "file": "src/app/project/components/issues/issue-status/issue-status.component.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "issueStatus",
                        "type": "IssueStatus"
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "issueStatus",
                        "type": "IssueStatus",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "value",
                    "type": "IssueStatus",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IssueTypeWithIcon",
            "id": "class-IssueTypeWithIcon-83939e9b3fda52c1e94a0d4599648b33",
            "file": "src/app/interface/issue-type-icon.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "issueType",
                        "type": "IssueType"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "issueType",
                        "type": "IssueType",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IssueUtil",
            "id": "class-IssueUtil-e446712748a4bf052df3c61a6760c1b2",
            "file": "src/app/project/utils/issue.ts",
            "type": "class",
            "properties": [],
            "methods": [
                {
                    "name": "getIssuePriorityIcon",
                    "args": [
                        {
                            "name": "issuePriority",
                            "type": "IssuePriority"
                        }
                    ],
                    "optional": false,
                    "returnType": "IssuePriorityIcon",
                    "typeParameters": [],
                    "line": 9,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "issuePriority",
                            "type": "IssuePriority",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getIssueTypeIcon",
                    "args": [
                        {
                            "name": "issueType",
                            "type": "IssueType"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "issueType",
                            "type": "IssueType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRandomId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "searchString",
                    "args": [
                        {
                            "name": "str",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 17,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchString",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "JComment",
            "id": "class-JComment-2557c6ab623bcb19ca8af3a632e4837c",
            "file": "src/app/interface/comment.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "issueId",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "type": "JUser"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "issueId",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "user",
                        "type": "JUser",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "body",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "createdAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "issueId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "updatedAt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "user",
                    "type": "JUser",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "userId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LoginPayload",
            "id": "class-LoginPayload-39ccb3fe79ba50cac141f7f6c2342bf2",
            "file": "src/app/project/auth/loginPayload.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 3
            },
            "properties": [
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NavItem",
            "id": "class-NavItem-122e640c94ca53b1ba08d397d46172a0",
            "file": "src/app/project/components/navigation/navbar-left/navbar-left.component.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "icon",
                        "type": "string"
                    },
                    {
                        "name": "tooltip",
                        "type": "string"
                    },
                    {
                        "name": "handler",
                        "type": "Handler"
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "icon",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tooltip",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "handler",
                        "type": "Handler",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "handler",
                    "type": "Handler",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "tooltip",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProjectConst",
            "id": "class-ProjectConst-28ec508debc582de4c9f4f6aface78b9",
            "file": "src/app/project/config/const.ts",
            "type": "class",
            "properties": [
                {
                    "name": "IssueId",
                    "defaultValue": "'issueId'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        115,
                        132
                    ]
                },
                {
                    "name": "IssueTypesWithIcon",
                    "defaultValue": "[\n    new IssueTypeWithIcon(IssueType.BUG),\n    new IssueTypeWithIcon(IssueType.STORY),\n    new IssueTypeWithIcon(IssueType.TASK)\n  ]",
                    "type": "IssueTypeWithIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "PrioritiesWithIcon",
                    "defaultValue": "[\n    IssueUtil.getIssuePriorityIcon(IssuePriority.LOWEST),\n    IssueUtil.getIssuePriorityIcon(IssuePriority.LOW),\n    IssueUtil.getIssuePriorityIcon(IssuePriority.MEDIUM),\n    IssueUtil.getIssuePriorityIcon(IssuePriority.HIGH),\n    IssueUtil.getIssuePriorityIcon(IssuePriority.HIGHEST)\n  ]",
                    "type": "IssuePriorityIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "Projects",
                    "defaultValue": "'Projects'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        115,
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SideBarLink",
            "id": "class-SideBarLink-776dda2f8cf101268a4b5166821fe379",
            "file": "src/app/interface/ui-model/nav-link.ts",
            "type": "class",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "icon",
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "optional": true
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "icon",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AutofocusDirective",
            "id": "directive-AutofocusDirective-4ed6dd09b0f4119701c7ea034dc26e4e",
            "file": "src/app/core/directives/autofocus.directive.ts",
            "type": "directive",
            "description": "",
            "selector": "[jAutofocus]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "jAutofocus",
                    "line": 9,
                    "type": "boolean | string"
                },
                {
                    "name": "timerDelay",
                    "defaultValue": "BASE_TIMER_DELAY",
                    "line": 10,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "timer",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "setDefaultValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "startFocusWorkflow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "stopFocusWorkflow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "implements": [
                "AfterContentInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AddIssueModalComponent",
            "id": "component-AddIssueModalComponent-c9ecb59afb955b428f19a5b5df85db21",
            "file": "src/app/project/components/add-issue-modal/add-issue-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "add-issue-modal",
            "styleUrls": [
                "./add-issue-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-issue-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assignees$",
                    "type": "Observable<JUser[]>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "editorOptions",
                    "defaultValue": "quillConfiguration",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "issueForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "reporterUsers$",
                    "type": "Observable<JUser[]>",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-action {\n  text-align: right;\n}",
                    "styleUrl": "./add-issue-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "_modalRef",
                        "type": "NzModalRef"
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    },
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "_fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_modalRef",
                        "type": "NzModalRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "f": {
                    "name": "f",
                    "getSignature": {
                        "name": "f",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                }
            }
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-24478e46957da0d685d13f9d2000be4c",
            "file": "src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleGoogleAnalytics",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "projectQuery",
                    "type": "ProjectQuery",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "router",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './core/styles/custom';\n\n#app-frame {\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  > nz-spin {\n    @apply flex flex-grow;\n\n    > .ant-spin-container {\n      @apply flex flex-grow;\n    }\n  }\n}\n\napp-project {\n  @apply flex;\n  flex-grow: 1;\n  flex-direction: column;\n  /* for Firefox */\n  min-height: 0;\n}\n\nboard-dnd {\n  @apply flex flex-grow;\n}\n\n.global-spinner {\n  @apply min-h-screen;\n  .ant-spin {\n    max-height: unset !important;\n  }\n}\n\n//ng-zorro override\nbody {\n  overflow: hidden;\n}\n\nbody,\n.ant-modal {\n  @apply text-textDark;\n}\n\n.ant-modal-body {\n  padding: 0;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef"
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    },
                    {
                        "name": "_googleAnalytics",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_googleAnalytics",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-0a4aea88bd44d1bef72a211595bb15a3",
            "file": "src/app/control/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "j-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "avatarUrl",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "line": 13
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "rounded",
                    "defaultValue": "true",
                    "line": 12
                },
                {
                    "name": "size",
                    "defaultValue": "12",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".avatar-container {\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: cover;  \n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "style": {
                    "name": "style",
                    "getSignature": {
                        "name": "style",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            }
        },
        {
            "name": "BoardComponent",
            "id": "component-BoardComponent-c5f4b6faebd0faa9afb327f7c7981d89",
            "file": "src/app/project/pages/board/board.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "board",
            "styleUrls": [
                "./board.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./board.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumbs",
                    "defaultValue": "['Projects', 'Task Manager']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "sendTwitterEventButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./board.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_googleAnalytics",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_googleAnalytics",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BoardDndComponent",
            "id": "component-BoardDndComponent-e43e798fcaf484725f451476382165e6",
            "file": "src/app/project/components/board/board-dnd/board-dnd.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "board-dnd",
            "styleUrls": [
                "./board-dnd.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./board-dnd.component.html"
            ],
            "viewProviders": [],
            "propertiesClass": [
                {
                    "name": "authQuery",
                    "type": "AuthQuery",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "issueStatuses",
                    "defaultValue": "[\n    IssueStatus.BACKLOG,\n    IssueStatus.SELECTED,\n    IssueStatus.IN_PROGRESS,\n    IssueStatus.DONE\n  ]",
                    "type": "IssueStatus[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "projectQuery",
                    "type": "ProjectQuery",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".board-dnd-list {\n  @apply mr-2 flex flex-col  rounded-sm bg-backgroundLightest flex-shrink-0;\n  width: calc(100% / 4 - 8px);\n  min-height: 400px;\n  min-width: 200px;  \n}\n",
                    "styleUrl": "./board-dnd.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "authQuery",
                        "type": "AuthQuery"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authQuery",
                        "type": "AuthQuery",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BoardDndListComponent",
            "id": "component-BoardDndListComponent-9585bf7e476e94fb658c08920d45ce0c",
            "file": "src/app/project/components/board/board-dnd-list/board-dnd-list.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[board-dnd-list]",
            "styleUrls": [
                "./board-dnd-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./board-dnd-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentUserId",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "issues$",
                    "line": 23,
                    "type": "Observable<JIssue[]>"
                },
                {
                    "name": "status",
                    "line": 21,
                    "type": "IssueStatus"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "issues",
                    "defaultValue": "[]",
                    "type": "JIssue[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "IssueStatusDisplay",
                    "defaultValue": "IssueStatusDisplay",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<JIssue[]>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<JIssue[]>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterIssues",
                    "args": [
                        {
                            "name": "issues",
                            "type": "JIssue[]"
                        },
                        {
                            "name": "filter",
                            "type": "FilterState"
                        }
                    ],
                    "optional": false,
                    "returnType": "JIssue[]",
                    "typeParameters": [],
                    "line": 66,
                    "jsdoctags": [
                        {
                            "name": "issues",
                            "type": "JIssue[]",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "FilterState",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDateWithinThreeDaysFromNow",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 87,
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "updateListPosition",
                    "args": [
                        {
                            "name": "newList",
                            "type": "JIssue[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "newList",
                            "type": "JIssue[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".status-list {\n  @apply mr-2 flex flex-col h-full rounded-sm bg-backgroundLightest flex-shrink-0;\n  padding-bottom: 20px;\n\n  .cdk-drop-list-dragging {\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n\n    .cdk-drag:not(.cdk-drag-placeholder) {\n      transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n    }\n  }\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14),\n    0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.cdk-drag-placeholder {\n  .issue-wrap {\n    background-color: rgba(150, 150, 200, 0.1);\n    border: 1px dashed #abc;\n    margin: 5px;\n\n    .issue {\n      opacity: 0;\n    }\n  }\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n",
                    "styleUrl": "./board-dnd-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    },
                    {
                        "name": "_filterQuery",
                        "type": "FilterQuery"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_filterQuery",
                        "type": "FilterQuery",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "issuesCount": {
                    "name": "issuesCount",
                    "getSignature": {
                        "name": "issuesCount",
                        "type": "number",
                        "returnType": "number",
                        "line": 26
                    }
                }
            }
        },
        {
            "name": "BoardFilterComponent",
            "id": "component-BoardFilterComponent-8d352584d590937cfc01a58c48ce9589",
            "file": "src/app/project/components/board/board-filter/board-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "board-filter",
            "styleUrls": [
                "./board-filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./board-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterQuery",
                    "type": "FilterQuery",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "filterService",
                    "type": "FilterService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "projectQuery",
                    "type": "ProjectQuery",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "searchControl",
                    "defaultValue": "new FormControl('')",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "userIds",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ignoreResolvedChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44
                },
                {
                    "name": "isUserSelected",
                    "args": [
                        {
                            "name": "user",
                            "type": "JUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "JUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "onlyMyIssueChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "resetAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "userChanged",
                    "args": [
                        {
                            "name": "user",
                            "type": "JUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "JUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".lift-avatar {\n  @apply cursor-pointer -ml-1 flex rounded-full transition-transform duration-100;\n  \n  &.is-active {\n    box-shadow: 0 0 0 4px #1255b9;\n    z-index: 1;\n  }\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n}\n",
                    "styleUrl": "./board-filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "filterQuery",
                        "type": "FilterQuery"
                    },
                    {
                        "name": "filterService",
                        "type": "FilterService"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "filterQuery",
                        "type": "FilterQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "filterService",
                        "type": "FilterService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "BreadcrumbsComponent",
            "id": "component-BreadcrumbsComponent-2a7ebe3885fa67ac94fd8c77fa00641c",
            "file": "src/app/control/breadcrumbs/breadcrumbs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "breadcrumbs",
            "styleUrls": [
                "./breadcrumbs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "line": 9,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./breadcrumbs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-af0912c1e763bff248a9dd57271b105b",
            "file": "src/app/control/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "j-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "'btn-primary'",
                    "line": 10
                },
                {
                    "name": "disabled",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "iconSize",
                    "defaultValue": "18",
                    "line": 12
                },
                {
                    "name": "isActive",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "isWorking",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$primary: #0052cc;\n$success: #0b875b;\n$danger: #e13c3c;\n$warning: #f89c1c;\n$info: #0fb9b1;\n$secondary: #f4f5f7;\n$bg: rgb(222, 235, 255);\n\n.btn {\n  @apply text-btn inline-flex items-center justify-center h-8 align-middle leading-none whitespace-no-wrap rounded-sm transition-all duration-100 appearance-none cursor-pointer select-none px-3;\n\n  &.icon-only {\n    @apply px-2;\n\n    .with-padding {\n      padding: 0;\n    }\n  }\n\n  &.disabled {\n    @apply opacity-50 cursor-default pointer-events-none;\n  }\n\n  &:focus,\n  &:active {\n    outline-color: #1890ff;\n  }\n\n  &.no-padding-left {\n    padding-left: 0;\n  }\n\n  &.no-padding-right {\n    padding-right: 0;\n  }\n}\n\n@mixin buttonBackground($btn-variant, $background) {\n  $background-dark: darken($background, 10%);\n  $background-light: lighten($background, 10%);\n\n  .btn-#{$btn-variant} {\n    color: white;\n    font-weight: 500;\n    background: $background;\n    &:disabled {\n      cursor: not-allowed;\n      background-color: lighten($background, 30%);\n    }\n\n    &:not(:disabled) {\n      &:hover {\n        background: $background-light;\n      }\n      &:active {\n        background: $background-dark;\n      }\n      &.active {\n        background: $background-dark !important;\n      }\n    }\n  }\n}\n@include buttonBackground(primary, $primary);\n@include buttonBackground(success, $success);\n\n.btn-secondary {\n  @apply text-textDark font-normal;\n  background: $secondary;\n\n  &:not(:disabled) {\n    &:hover {\n      @apply bg-backgroundLight;\n    }\n\n    &:active {\n      @apply bg-backgroundLightPrimary;\n      color: $primary;\n    }\n  }\n}\n\n.btn-empty {\n  background: white;\n  outline: none;\n  @apply text-textDark;\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:not(:disabled) {\n    &:hover {\n      @apply bg-backgroundLight;\n    }\n    &:active {\n      @apply bg-backgroundLightPrimary;\n      color: $primary;\n    }\n    &.is-active {\n      background-color: $bg;\n      @apply text-textDark;\n    }\n  }\n}\n\n.with-padding {\n  @apply pl-2;\n}\n\n.is-active {\n  @apply text-textLink bg-backgroundLightPrimary;\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            }
        },
        {
            "name": "FullIssueDetailComponent",
            "id": "component-FullIssueDetailComponent-8898b5e7b84a989311978a165f3a2d43",
            "file": "src/app/project/pages/full-issue-detail/full-issue-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "full-issue-detail",
            "styleUrls": [
                "./full-issue-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./full-issue-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "issueById$",
                    "type": "Observable<JIssue>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "issueId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "project",
                    "type": "JProject",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "backHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "deleteIssue",
                    "args": [
                        {
                            "type": "DeleteIssueModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "type": "DeleteIssueModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getIssue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./full-issue-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_router",
                        "type": "Router"
                    },
                    {
                        "name": "_route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "breadcrumbs": {
                    "name": "breadcrumbs",
                    "getSignature": {
                        "name": "breadcrumbs",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 22
                    }
                }
            }
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-b22ba19dcb48b1b521a7ebb62f0c25d5",
            "file": "src/app/control/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "j-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "containerClassName",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "control",
                    "line": 10,
                    "type": "FormControl"
                },
                {
                    "name": "enableClearButton",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "iconSize",
                    "defaultValue": "16",
                    "line": 13
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-container {\n  position: relative;\n  display: flex;\n  height: 32px;\n  width: 100%;\n\n  &.flat {\n    height: 40px;\n    .input {\n      flex-grow: 1;\n      border: none;\n      border-bottom: 2px solid #0052cc;\n      font-size: 21px;\n      background: #fff;\n\n      &::placeholder {\n        @apply text-textLight;\n        font-size: 21px;\n      }\n      &:focus,\n      &:hover {\n        border: none;\n        border-bottom: 2px solid #0052cc;\n        box-shadow: none;\n        background: #fff;\n        outline: 0;\n      }\n    }\n  }\n}\n\n.invalid {\n  &,\n  &:focus {\n    border: 1px solid #e13c3c;\n    box-shadow: none;\n  }\n}\n\n.input-icon-container {\n  position: absolute;\n  height: 100%;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.right {\n    left: auto;\n    right: 0;\n    cursor: pointer;\n  }\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "iconContainerWidth": {
                    "name": "iconContainerWidth",
                    "getSignature": {
                        "name": "iconContainerWidth",
                        "type": "number",
                        "returnType": "number",
                        "line": 17
                    }
                },
                "isShowClearButton": {
                    "name": "isShowClearButton",
                    "getSignature": {
                        "name": "isShowClearButton",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 21
                    }
                }
            }
        },
        {
            "name": "IssueAssigneesComponent",
            "id": "component-IssueAssigneesComponent-afbbee334906777c78db162aad3d516a",
            "file": "src/app/project/components/issues/issue-assignees/issue-assignees.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-assignees",
            "styleUrls": [
                "./issue-assignees.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-assignees.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 14,
                    "type": "JIssue"
                },
                {
                    "name": "users",
                    "line": 15,
                    "type": "JUser[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assignees",
                    "type": "JUser[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "addUserToIssue",
                    "args": [
                        {
                            "name": "user",
                            "type": "JUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "JUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isUserSelected",
                    "args": [
                        {
                            "name": "user",
                            "type": "JUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "JUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "removeUser",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".add-more {\n  font-size: 12.5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  color: #0052cc;\n\n  &:hover,\n  &:visited,\n  &:active {\n    color: #0052cc;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }  \n}\n",
                    "styleUrl": "./issue-assignees.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ]
        },
        {
            "name": "IssueAssigneesSelectComponent",
            "id": "component-IssueAssigneesSelectComponent-e317ff594fb4bed3cc8620bd7bcd9a63",
            "file": "src/app/project/components/add-issue-modal/issue-assignees-select/issue-assignees-select.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-assignees-select",
            "styleUrls": [
                "./issue-assignees-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-assignees-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "line": 12,
                    "type": "FormControl"
                },
                {
                    "name": "users",
                    "line": 13,
                    "type": "JUser[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getUser",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "issue-assignees-select .ant-select-selection-item-remove {\n  line-height: unset;\n  margin-top: -2px;\n}\n",
                    "styleUrl": "./issue-assignees-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            }
        },
        {
            "name": "IssueCardComponent",
            "id": "component-IssueCardComponent-9aeec0fb3473131ae732b625d5769d43",
            "file": "src/app/project/components/issues/issue-card/issue-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-card",
            "styleUrls": [
                "./issue-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 18,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assignees",
                    "type": "JUser[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "issueTypeIcon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "priorityIcon",
                    "type": "IssuePriorityIcon",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "openIssueModal",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply flex flex-grow;\n  margin-bottom: 5px;\n}\n\n.issue-wrap {\n  touch-action: manipulation;\n  cursor: grab;\n  @apply flex flex-grow;\n}\n\n.issue {\n  @apply flex flex-grow flex-col rounded-sm bg-white transition-all duration-100 select-none;\n  padding: 10px;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 1px 2px 0px;\n}\n\n.issue:hover {\n  @apply bg-backgroundLight;\n}\n",
                    "styleUrl": "./issue-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "OnInit"
            ]
        },
        {
            "name": "IssueCommentComponent",
            "id": "component-IssueCommentComponent-aa1fe1f3ba56f35f9ed5bbf6860debec",
            "file": "src/app/project/components/issues/issue-comment/issue-comment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-comment",
            "styleUrls": [
                "./issue-comment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-comment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "comment",
                    "line": 17,
                    "type": "JComment"
                },
                {
                    "name": "createMode",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "issueId",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commentBoxRef",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'commentBoxRef'"
                        }
                    ]
                },
                {
                    "name": "commentControl",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isEditing",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "user",
                    "type": "JUser",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "addComment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                },
                {
                    "name": "cancelAddComment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "setCommentEdit",
                    "args": [
                        {
                            "name": "mode",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:keyup",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 30
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".textarea-border {\n    color: rgb(137, 147, 164);\n    border: 1px solid rgb(223, 225, 230);\n    cursor: text;\n    user-select: none;\n    padding: 12px 16px;\n    border-radius: 4px;\n  }",
                    "styleUrl": "./issue-comment.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_authQuery",
                        "type": "AuthQuery"
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_authQuery",
                        "type": "AuthQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "IssueCommentsComponent",
            "id": "component-IssueCommentsComponent-5c6190a8890a83885139a56fb457a6ea",
            "file": "src/app/project/components/issues/issue-comments/issue-comments.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-comments",
            "styleUrls": [
                "./issue-comments.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-comments.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 10,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-comments.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            }
        },
        {
            "name": "IssueDeleteModalComponent",
            "id": "component-IssueDeleteModalComponent-790adfe01b0ab9aa62804f179ceaa0a8",
            "file": "src/app/project/components/issues/issue-delete-modal/issue-delete-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-delete-modal",
            "styleUrls": [
                "./issue-delete-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-delete-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "issueId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "onDelete",
                    "defaultValue": "new EventEmitter<DeleteIssueModel>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "deleteIssue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-delete-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_modalRef",
                        "type": "NzModalRef"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_modalRef",
                        "type": "NzModalRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "IssueDescriptionComponent",
            "id": "component-IssueDescriptionComponent-91eec2541d4dcdd74ce3149d5adb8b52",
            "file": "src/app/project/components/issues/issue-description/issue-description.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-description",
            "styleUrls": [
                "./issue-description.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-description.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 14,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "descriptionControl",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "editorOptions",
                    "defaultValue": "quillConfiguration",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isEditing",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isWorking",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "editorCreated",
                    "args": [
                        {
                            "name": "editor",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "editor",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "setEditMode",
                    "args": [
                        {
                            "name": "mode",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-readonly {\n  position: relative;\n  min-height: 50px;\n  cursor: pointer;\n  \n  .icon-edit {\n    @apply font-normal;\n    display: none;\n    position: absolute;\n    right: 3px;\n    top: 3px;\n  }\n\n  &:hover {\n    box-shadow: none;\n    border: none;\n    background-color: #f4f5f7;\n\n    .icon-edit {\n      display: block;\n    }\n  }\n\n  .ql-editor {\n    padding: 0 !important;\n    font-size: 15px;\n  }\n}\n\n.ql-editor {\n  height: auto !important;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    @apply font-medium;\n    margin-bottom: 10px;\n  }\n  img,\n  video {\n    display: inline-block;\n  }\n\n  ul {\n    @apply pl-2;\n  }\n}\n",
                    "styleUrl": "./issue-description.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ]
        },
        {
            "name": "IssueDetailComponent",
            "id": "component-IssueDetailComponent-af2e17b265d8c797fd0366174172b80c",
            "file": "src/app/project/components/issues/issue-detail/issue-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-detail",
            "styleUrls": [
                "./issue-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isShowCloseButton",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "isShowFullScreenButton",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "issue",
                    "line": 14,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClosed",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDelete",
                    "defaultValue": "new EventEmitter<DeleteIssueModel>()",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "onOpenIssue",
                    "defaultValue": "new EventEmitter<string>()",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "projectQuery",
                    "type": "ProjectQuery",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "openDeleteIssueModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "openIssuePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "IssueLoaderComponent",
            "id": "component-IssueLoaderComponent-5cdf1b78513df9886bdb31662d44e88a",
            "file": "src/app/project/components/issues/issue-loader/issue-loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-loader",
            "styleUrls": [
                "./issue-loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-loader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            }
        },
        {
            "name": "IssueModalComponent",
            "id": "component-IssueModalComponent-2cd41e1070ddf55abb2e40bcec53a7b5",
            "file": "src/app/project/components/issues/issue-modal/issue-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-modal",
            "styleUrls": [
                "./issue-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue$",
                    "line": 15,
                    "type": "Observable<JIssue>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "deleteIssue",
                    "args": [
                        {
                            "type": "DeleteIssueModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "type": "DeleteIssueModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openIssuePage",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ant-modal {\n    @apply text-textDark;\n}",
                    "styleUrl": "./issue-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_modal",
                        "type": "NzModalRef"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_modal",
                        "type": "NzModalRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "IssuePriorityComponent",
            "id": "component-IssuePriorityComponent-4b69214673be8d908d508f852bf33774",
            "file": "src/app/project/components/issues/issue-priority/issue-priority.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-priority",
            "styleUrls": [
                "./issue-priority.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-priority.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 22,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "priorities",
                    "type": "IssuePriorityIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectedPriority",
                    "type": "IssuePriority",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "isPrioritySelected",
                    "args": [
                        {
                            "name": "priority",
                            "type": "IssuePriority"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "priority",
                            "type": "IssuePriority",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "updateIssue",
                    "args": [
                        {
                            "name": "priority",
                            "type": "IssuePriority"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "priority",
                            "type": "IssuePriority",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".priority-label {\n  margin-top: -3px;\n}\n",
                    "styleUrl": "./issue-priority.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "selectedPriorityIcon": {
                    "name": "selectedPriorityIcon",
                    "getSignature": {
                        "name": "selectedPriorityIcon",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                }
            }
        },
        {
            "name": "IssuePrioritySelectComponent",
            "id": "component-IssuePrioritySelectComponent-d2972e2dc089370d8f28aa6261fa1627",
            "file": "src/app/project/components/add-issue-modal/issue-priority-select/issue-priority-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-priority-select",
            "styleUrls": [
                "./issue-priority-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-priority-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "line": 14,
                    "type": "FormControl"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "priorities",
                    "type": "IssuePriorityIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getPriorityIcon",
                    "args": [
                        {
                            "name": "priority",
                            "type": "IssuePriority"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "priority",
                            "type": "IssuePriority",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-priority-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            }
        },
        {
            "name": "IssueReporterComponent",
            "id": "component-IssueReporterComponent-a948e1e2ad94516a52a3a2d0e0a884f7",
            "file": "src/app/project/components/issues/issue-reporter/issue-reporter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-reporter",
            "styleUrls": [
                "./issue-reporter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-reporter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 14,
                    "type": "JIssue"
                },
                {
                    "name": "users",
                    "line": 15,
                    "type": "JUser[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reporter",
                    "type": "JUser",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "isUserSelected",
                    "args": [
                        {
                            "name": "user",
                            "type": "JUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "JUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateIssue",
                    "args": [
                        {
                            "name": "user",
                            "type": "JUser"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "JUser",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".user-name {\n  @apply text-btn;\n  margin-top: -3px;\n}\n",
                    "styleUrl": "./issue-reporter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ]
        },
        {
            "name": "IssueReporterSelectComponent",
            "id": "component-IssueReporterSelectComponent-9aeeb2df7f4dd5d97af718e798a1d1e5",
            "file": "src/app/project/components/add-issue-modal/issue-reporter-select/issue-reporter-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-reporter-select",
            "styleUrls": [
                "./issue-reporter-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-reporter-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "line": 11,
                    "type": "FormControl"
                },
                {
                    "name": "users",
                    "line": 12,
                    "type": "JUser[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getUser",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-reporter-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "IssueResultComponent",
            "id": "component-IssueResultComponent-a2fe7b70107501d338b4a95d49304800",
            "file": "src/app/project/components/search/issue-result/issue-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-result",
            "styleUrls": [
                "./issue-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 11,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "accessors": {
                "issueTypeIcon": {
                    "name": "issueTypeIcon",
                    "getSignature": {
                        "name": "issueTypeIcon",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "IssueStatusComponent",
            "id": "component-IssueStatusComponent-ea607f15ec592d16f5e9fff2e7116945",
            "file": "src/app/project/components/issues/issue-status/issue-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-status",
            "styleUrls": [
                "./issue-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 12,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "IssueStatusDisplay",
                    "defaultValue": "IssueStatusDisplay",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "issueStatuses",
                    "type": "IssueStatusValueTitle[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "variants",
                    "defaultValue": "{\n    [IssueStatus.BACKLOG]: 'btn-secondary',\n    [IssueStatus.SELECTED]: 'btn-secondary',\n    [IssueStatus.IN_PROGRESS]: 'btn-primary',\n    [IssueStatus.DONE]: 'btn-success'\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "isStatusSelected",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 44,
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "updateIssue",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    },
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "IssueTitleComponent",
            "id": "component-IssueTitleComponent-0f674578ee3a1786eed296eb1b9d47eb",
            "file": "src/app/project/components/issues/issue-title/issue-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-title",
            "styleUrls": [
                "./issue-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 12,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "titleControl",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  @apply flex;\n}\n\n.textarea-inline-control {\n  @apply text-2xl font-medium;\n  margin-left: -8px;\n}\n",
                    "styleUrl": "./issue-title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ]
        },
        {
            "name": "IssueTypeComponent",
            "id": "component-IssueTypeComponent-8ddf4ee50b783f2577ff1d39af7d1f51",
            "file": "src/app/project/components/issues/issue-type/issue-type.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-type",
            "styleUrls": [
                "./issue-type.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-type.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "issue",
                    "line": 14,
                    "type": "JIssue"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "issueTypes",
                    "type": "IssueTypeWithIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "isTypeSelected",
                    "args": [
                        {
                            "name": "type",
                            "type": "IssueType"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "IssueType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "updateIssue",
                    "args": [
                        {
                            "name": "issueType",
                            "type": "IssueType"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "issueType",
                            "type": "IssueType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".type-dropdown {\n  margin-left: -12px;\n}\n",
                    "styleUrl": "./issue-type.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "selectedIssueTypeIcon": {
                    "name": "selectedIssueTypeIcon",
                    "getSignature": {
                        "name": "selectedIssueTypeIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 16
                    }
                }
            }
        },
        {
            "name": "IssueTypeSelectComponent",
            "id": "component-IssueTypeSelectComponent-490d2f5686656bbeeef33e3dd662483a",
            "file": "src/app/project/components/add-issue-modal/issue-type-select/issue-type-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "issue-type-select",
            "styleUrls": [
                "./issue-type-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-type-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "line": 14,
                    "type": "FormControl"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "issueTypes",
                    "type": "IssueTypeWithIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "getIssueTypeIcon",
                    "args": [
                        {
                            "name": "issueType",
                            "type": "IssueType"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "issueType",
                            "type": "IssueType",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./issue-type-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            }
        },
        {
            "name": "NavbarLeftComponent",
            "id": "component-NavbarLeftComponent-122e640c94ca53b1ba08d397d46172a0",
            "file": "src/app/project/components/navigation/navbar-left/navbar-left.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar-left",
            "styleUrls": [
                "./navbar-left.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-left.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authQuery",
                    "type": "AuthQuery",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "items",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "openCreateIssueModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "openSearchDrawler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$light-blue: rgb(28, 99, 206);\n\n.navbarLeft-content {\n  @apply h-screen w-navbarLeft pt-6 pb-5 flex flex-col bg-primary flex-shrink-0;\n}\n\n.logoLink {\n  @apply relative pb-2 flex items-center justify-center;\n}\n\n.item {\n  @apply relative w-full flex items-center justify-center;\n  min-height: 42px;\n\n  .user-profile-photo {\n    width: 26px;\n  }\n}\n\n.itemIcon {\n  @apply w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 select-none transition-colors duration-100 cursor-pointer;\n}\n\n.itemIcon:hover {\n  background: $light-blue;\n}\n\n.about-popover {\n  max-width: 270px;\n}\n",
                    "styleUrl": "./navbar-left.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authQuery",
                        "type": "AuthQuery"
                    },
                    {
                        "name": "_drawerService",
                        "type": "NzDrawerService"
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "authQuery",
                        "type": "AuthQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_drawerService",
                        "type": "NzDrawerService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-56e4b5f030b2fb1e9c0944326d24ad0b",
            "file": "src/app/project/components/navigation/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation",
            "styleUrls": [
                "./navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "expanded",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "manualToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navigation {\n  display: flex;\n}\n",
                    "styleUrl": "./navigation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            }
        },
        {
            "name": "ProjectComponent",
            "id": "component-ProjectComponent-ccd442e5fbc99afb1462f0da10d64bd1",
            "file": "src/app/project/project.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-project",
            "styleUrls": [
                "./project.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "expanded",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handleResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "manualToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#content {\n  flex: 1;\n  min-width: 0;\n  z-index: 0;\n  overflow: auto;\n  will-change: padding-left;\n  transition: padding-left 300ms cubic-bezier(0.2, 0, 0, 1) 0s;\n}\n",
                    "styleUrl": "./project.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ResizerComponent",
            "id": "component-ResizerComponent-b85b41172e19188a46a1c858719df4b3",
            "file": "src/app/project/components/navigation/resizer/resizer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-resizer",
            "styleUrls": [
                "./resizer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./resizer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "expanded",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sizer-wrap {\n  bottom: 0;\n  position: absolute;\n  top: 0;\n  transform: translateZ(0);\n  width: 24px;\n  z-index: 3;\n}\n\n.sizer {\n  cursor: ew-resize;\n  height: 100%;\n  left: -4px;\n  position: relative;\n  width: 24px;\n}\n\n.strip {\n  background: linear-gradient(\n    to left,\n    rgba(0, 0, 0, 0.2) 0px,\n    rgba(0, 0, 0, 0.2) 1px,\n    rgba(0, 0, 0, 0.1) 1px,\n    rgba(0, 0, 0, 0) 100%\n  );\n  bottom: 0;\n  left: -3px;\n  opacity: 0.5;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  transition-duration: 0.22s;\n  transition-property: left, opacity, width;\n  transition-timing-function: cubic-bezier(0.2, 0, 0, 1);\n  width: 3px;\n}\n.line {\n  background-color: #4c9aff;\n  opacity: 0;\n  height: 100%;\n  left: 3px;\n  position: absolute;\n  width: 2px;\n  transition: opacity 200ms ease 0s;\n}\n\n.sizer-wrap:hover {\n  .sizer .line {\n    opacity: 1;\n  }\n  .btn .icon {\n    color: #4c9aff;\n  }\n}\n\n.btn {\n  box-shadow: rgba(9, 30, 66, 0.08) 0px 0px 0px 1px, rgba(9, 30, 66, 0.08) 0px 2px 4px 1px;\n  color: rgb(107, 119, 140);\n  cursor: pointer;\n  height: 24px;\n  opacity: 1;\n  position: absolute;\n  top: 32px;\n  transform: translate(-50%);\n  width: 24px;\n  background: 0px center white;\n  border-width: 0px;\n  border-style: initial;\n  border-color: initial;\n  border-image: initial;\n  border-radius: 50%;\n  outline: 0px;\n  padding: 0px;\n  transition: background-color 100ms linear 0s, color 100ms linear 0s,\n    opacity 300ms cubic-bezier(0.2, 0, 0, 1) 0s, transform 300ms cubic-bezier(0.2, 0, 0, 1) 0s;\n  &:hover {\n    background: rgb(67, 154, 255);\n    .icon {\n      color: white !important;\n    }\n  }\n}\n\n.overlay {\n  position: absolute;\n  left: -8px;\n  right: -12px;\n  bottom: -8px;\n  top: -8px;\n}\n",
                    "styleUrl": "./resizer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "accessors": {
                "icon": {
                    "name": "icon",
                    "getSignature": {
                        "name": "icon",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                }
            }
        },
        {
            "name": "SearchDrawerComponent",
            "id": "component-SearchDrawerComponent-83c28c6acc78dde8ebb9d61428d496a9",
            "file": "src/app/project/components/search/search-drawer/search-drawer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "search-drawer",
            "styleUrls": [
                "./search-drawer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-drawer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "recentIssues$",
                    "type": "Observable<JIssue[]>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "results$",
                    "type": "Observable<JIssue[]>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "searchControl",
                    "defaultValue": "new FormControl('')",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDrawer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "openIssueModal",
                    "args": [
                        {
                            "name": "issue",
                            "type": "JIssue"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "issue",
                            "type": "JIssue",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".section-title {\n  @apply text-textMedium font-bold text-xs uppercase pb-3;\n}\n",
                    "styleUrl": "./search-drawer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "_drawer",
                        "type": "NzDrawerRef"
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_drawer",
                        "type": "NzDrawerRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_modalService",
                        "type": "NzModalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "hasSearchTermInput": {
                    "name": "hasSearchTermInput",
                    "getSignature": {
                        "name": "hasSearchTermInput",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 24
                    }
                }
            }
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-41fd602bddca202a813f947a0173b41f",
            "file": "src/app/project/pages/settings/settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "type": "ProjectCategory[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "project",
                    "type": "JProject",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "projectForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65
                },
                {
                    "name": "updateForm",
                    "args": [
                        {
                            "name": "project",
                            "type": "JProject"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "JProject",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".project-form {\n  max-width: 640px;\n}\n",
                    "styleUrl": "./settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService"
                    },
                    {
                        "name": "_notification",
                        "type": "NzNotificationService"
                    },
                    {
                        "name": "_fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "_router",
                        "type": "Router"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_projectService",
                        "type": "ProjectService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_notification",
                        "type": "NzNotificationService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "breadcrumbs": {
                    "name": "breadcrumbs",
                    "getSignature": {
                        "name": "breadcrumbs",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 21
                    }
                }
            }
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-7b29770947a4cc5fb7bbfcd387a5efca",
            "file": "src/app/project/components/navigation/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "expanded",
                    "line": 15,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "project",
                    "type": "JProject",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "sideBarLinks",
                    "type": "SideBarLink[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidebar {\n  will-change: width;\n  transition: width 300ms cubic-bezier(0.2, 0, 0, 1) 0s;\n  @apply h-full relative;\n}\n\n.sidebar-content {\n  height: 100%;\n  left: 0px;\n  min-width: 240px;\n  overflow-x: hidden;\n  position: absolute;\n  top: 0px;\n  width: 100%;\n  @apply px-4 bg-backgroundLightest;\n}\n\n.not-implemented {\n  top: 7px;\n  left: 40px;\n  width: 140px;\n  padding: 5px 0 5px 8px;\n  @apply bg-backgroundMedium text-textDark inline-block absolute rounded-sm uppercase opacity-0 text-xs font-bold;\n}\n\n.link {\n  @apply flex items-center relative py-2 px-3 rounded-sm text-textDarkest;\n\n  &:hover .not-implemented {\n    @apply opacity-100;\n  }\n}\n\n.active {\n  @apply text-textLink bg-backgroundLight;\n}\n\n.allowed:hover {\n  @apply bg-backgroundLight;\n}\n\n.not-allowed {\n  cursor: not-allowed;\n}\n\n.divider {\n  @apply mt-4 pt-4 border-t border-borderLight;\n}\n",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_projectQuery",
                        "type": "ProjectQuery",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "sidebarWidth": {
                    "name": "sidebarWidth",
                    "getSignature": {
                        "name": "sidebarWidth",
                        "type": "number",
                        "returnType": "number",
                        "line": 17
                    }
                }
            }
        },
        {
            "name": "SnowComponent",
            "id": "component-SnowComponent-50ee76b5bad7b7675aa9fe5dc93a4a75",
            "file": "src/app/core/snow/snow.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "j-snow",
            "styleUrls": [
                "./snow.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snow.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "//https://codepen.io/alphardex/pen/dyPorwJ\n\n@function random_range($min, $max) {\n  $rand: random();\n  $random_range: $min + floor($rand * (($max - $min) + 1));\n  @return $random_range;\n}\n\n.snow {\n  $total: 200;\n  position: absolute;\n  width: 20px;\n  height: 20px;  \n  font-size: 20px;\n  border-radius: 50%;\n  pointer-events: none;\n  color: #a3b1bc;\n\n  @for $i from 1 through $total {\n    $random-x: random(1000000) * 0.0001vw;\n    $random-offset: random_range(-100000, 100000) * 0.0001vw;\n    $random-x-end: $random-x + $random-offset;\n    $random-x-end-yoyo: $random-x + ($random-offset / 2);\n    $random-yoyo-time: random_range(30000, 80000) / 100000;\n    $random-yoyo-y: $random-yoyo-time * 100vh;\n    $random-scale: random(10000) * 0.0001;\n    $fall-duration: random_range(10, 30) * 1s;\n    $fall-delay: random(30) * -1s;\n\n    &:nth-child(#{$i}) {\n      opacity: random(8000) * 0.0001;\n      transform: translate($random-x, -10px) scale($random-scale);\n      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;\n    }\n\n    @keyframes fall-#{$i} {\n      #{percentage($random-yoyo-time)} {\n        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);\n      }\n      \n      to {\n        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./snow.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SvgDefinitionsComponent",
            "id": "component-SvgDefinitionsComponent-7064ee768bf7535caa16ee903243b51f",
            "file": "src/app/control/svg-definitions/svg-definitions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "svg-definitions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./svg-definitions.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "SvgIconComponent",
            "id": "component-SvgIconComponent-6a19664e54b9329c9aadb77223de412a",
            "file": "src/app/control/svg-icon/svg-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "svg-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./svg-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fill",
                    "defaultValue": "'currentColor'",
                    "line": 10
                },
                {
                    "name": "name",
                    "line": 8,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "16",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "window",
                    "defaultValue": "window",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "accessors": {
                "iconUrl": {
                    "name": "iconUrl",
                    "getSignature": {
                        "name": "iconUrl",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            }
        },
        {
            "name": "UserComponent",
            "id": "component-UserComponent-f1549c7d2c03cf1442e0e0b89ed780aa",
            "file": "src/app/project/components/user/user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "j-user",
            "styleUrls": [
                "./user.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "line": 10,
                    "type": "JUser"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            }
        },
        {
            "name": "WorkInProgressComponent",
            "id": "component-WorkInProgressComponent-706e199ca52362b9f6e350f414cd4e21",
            "file": "src/app/work-in-progress/work-in-progress.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "work-in-progress",
            "styleUrls": [
                "./work-in-progress.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./work-in-progress.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./work-in-progress.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            }
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ControlModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BreadcrumbsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SvgDefinitionsComponent"
                        },
                        {
                            "name": "SvgIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BreadcrumbsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SvgDefinitionsComponent"
                        },
                        {
                            "name": "SvgIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProjectModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddIssueModalComponent"
                        },
                        {
                            "name": "AutofocusDirective"
                        },
                        {
                            "name": "BoardComponent"
                        },
                        {
                            "name": "BoardDndComponent"
                        },
                        {
                            "name": "BoardDndListComponent"
                        },
                        {
                            "name": "BoardFilterComponent"
                        },
                        {
                            "name": "FullIssueDetailComponent"
                        },
                        {
                            "name": "IssueAssigneesComponent"
                        },
                        {
                            "name": "IssueAssigneesSelectComponent"
                        },
                        {
                            "name": "IssueCardComponent"
                        },
                        {
                            "name": "IssueCommentComponent"
                        },
                        {
                            "name": "IssueCommentsComponent"
                        },
                        {
                            "name": "IssueDeleteModalComponent"
                        },
                        {
                            "name": "IssueDescriptionComponent"
                        },
                        {
                            "name": "IssueDetailComponent"
                        },
                        {
                            "name": "IssueLoaderComponent"
                        },
                        {
                            "name": "IssueModalComponent"
                        },
                        {
                            "name": "IssuePriorityComponent"
                        },
                        {
                            "name": "IssuePrioritySelectComponent"
                        },
                        {
                            "name": "IssueReporterComponent"
                        },
                        {
                            "name": "IssueReporterSelectComponent"
                        },
                        {
                            "name": "IssueResultComponent"
                        },
                        {
                            "name": "IssueStatusComponent"
                        },
                        {
                            "name": "IssueTitleComponent"
                        },
                        {
                            "name": "IssueTypeComponent"
                        },
                        {
                            "name": "IssueTypeSelectComponent"
                        },
                        {
                            "name": "NavbarLeftComponent"
                        },
                        {
                            "name": "NavigationComponent"
                        },
                        {
                            "name": "ProjectComponent"
                        },
                        {
                            "name": "ResizerComponent"
                        },
                        {
                            "name": "SearchDrawerComponent"
                        },
                        {
                            "name": "SettingsComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "UserComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ControlModule"
                        },
                        {
                            "name": "ProjectRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProjectRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SnowModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SnowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SnowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WorkInProgressModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "WorkInProgressComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "WorkInProgressRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WorkInProgressRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "avatarUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/avatar/avatar.stories.ts",
                "type": "string",
                "defaultValue": "'https://res.cloudinary.com/dvujyxh7e/image/upload/c_scale,w_128/v1593253478/trung-vo_bioxmc.png'"
            },
            {
                "name": "BASE_TIMER_DELAY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/directives/autofocus.directive.ts",
                "type": "number",
                "defaultValue": "10"
            },
            {
                "name": "BoardPageComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/components/board/index.ts",
                "type": "[]",
                "defaultValue": "[BoardDndComponent, BoardDndListComponent, BoardFilterComponent]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/breadcrumbs/breadcrumbs.stories.ts",
                "type": "Story<BreadcrumbsComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/button/button.stories.ts",
                "type": "Story<ButtonProps>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "EnvironmentModel",
                "defaultValue": "{\n  production: true,\n  apiUrl: '/assets/data' // 'https://clone-angular-api.herokuapp.com'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "EnvironmentModel",
                "defaultValue": "{\n  production: false,\n  apiUrl: '/assets/data' // 'http://localhost:3000'\n}"
            },
            {
                "name": "Flat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/input/input.stories.ts",
                "type": "Story<InputComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GOOGLE_ANALYTICS_ID",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/services/google-analytics.service.ts",
                "type": "string",
                "defaultValue": "'UA-80363801-4'"
            },
            {
                "name": "gtag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/services/google-analytics.service.ts",
                "type": "any"
            },
            {
                "name": "initSentry",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.ts",
                "type": "",
                "defaultValue": "() => {\n  Sentry.init({\n    dsn: 'https://b2af8332e38f486d910f06b79df66365@o495789.ingest.sentry.io/5569161',\n    autoSessionTracking: true,\n    integrations: [\n      new Integrations.BrowserTracing({\n        tracingOrigins: ['localhost', 'https://.trungk18.com/'],\n        routingInstrumentation: Sentry.routingInstrumentation\n      })\n    ],\n\n    tracesSampleRate: 1.0\n  });\n}"
            },
            {
                "name": "IssuePriorityColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interface/issue.ts",
                "type": "object",
                "defaultValue": "{\n  [IssuePriority.HIGHEST]: '#CD1317',\n  [IssuePriority.HIGH]: '#E9494A',\n  [IssuePriority.MEDIUM]: '#E97F33',\n  [IssuePriority.LOW]: '#2D8738',\n  [IssuePriority.LOWEST]: '#57A55A'\n}"
            },
            {
                "name": "IssueStatusDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/interface/issue.ts",
                "type": "object",
                "defaultValue": "{\n  [IssueStatus.BACKLOG]: 'Backlog',\n  [IssueStatus.SELECTED]: 'Selected for Development',\n  [IssueStatus.IN_PROGRESS]: 'In progress',\n  [IssueStatus.DONE]: 'Done'\n}"
            },
            {
                "name": "IssueUtilComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/components/issues/index.ts",
                "type": "[]",
                "defaultValue": "[\n  IssueCardComponent,\n  IssueLoaderComponent,\n  IssueModalComponent,\n  IssueDetailComponent,\n  IssueTitleComponent,\n  IssueDescriptionComponent,\n  IssueTypeComponent,\n  IssuePriorityComponent,\n  IssueAssigneesComponent,\n  IssueReporterComponent,\n  IssueStatusComponent,\n  IssueCommentsComponent,\n  IssueCommentComponent,\n  IssueDeleteModalComponent\n]"
            },
            {
                "name": "ControlComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/control.module.ts",
                "type": "[]",
                "defaultValue": "[\n  SvgDefinitionsComponent,\n  SvgIconComponent,\n  BreadcrumbsComponent,\n  ButtonComponent,\n  InputComponent,\n  AvatarComponent\n]"
            },
            {
                "name": "NavigationComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/components/navigation/index.ts",
                "type": "[]",
                "defaultValue": "[SidebarComponent, NavbarLeftComponent, NavigationComponent]"
            },
            {
                "name": "NZ__ICONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/config/icons.ts",
                "type": "IconDefinition[]",
                "defaultValue": "[\n  QuestionCircleFill,\n  PlusOutline,\n  SearchOutline,\n  CloseOutline,\n  TwitterOutline,\n  EditOutline\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/button/button.stories.ts",
                "type": "Story<ButtonProps>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "quillConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/config/editor.ts",
                "type": "object",
                "defaultValue": "{\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'],\n    ['blockquote', 'code-block'],\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    [{ color: [] }, { background: [] }],\n    ['link'],\n    ['clean']\n  ]\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Rounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/avatar/avatar.stories.ts",
                "type": "Story<AvatarComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/button/button.stories.ts",
                "type": "Story<ButtonProps>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SideBarLinks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/config/sidebar.ts",
                "type": "[]",
                "defaultValue": "[\n  new SideBarLink('Kanban Board', 'board', 'board'),\n  new SideBarLink('Project Settings', 'cog', 'settings'),\n  new SideBarLink('Releases', 'ship'),\n  new SideBarLink('Issues and filters', 'filters'),\n  new SideBarLink('Pages', 'page'),\n  new SideBarLink('Reports', 'report'),\n  new SideBarLink('Components', 'component')\n]"
            },
            {
                "name": "Square",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/avatar/avatar.stories.ts",
                "type": "Story<AvatarComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/breadcrumbs/breadcrumbs.stories.ts",
                "type": "Story<BreadcrumbsComponent>",
                "defaultValue": "(args: BreadcrumbsComponent) => ({\n  component: BreadcrumbsComponent,\n  props: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/button/button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "({ label, className }: Partial<ButtonProps>) => ({\n  component: ButtonComponent,\n  moduleMetadata: {\n    declarations: [ButtonComponent], // Removed if no template\n    imports: []\n  },\n  template: `<j-button className='${className}'>${label}</j-button>`\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/avatar/avatar.stories.ts",
                "type": "Story<AvatarComponent>",
                "defaultValue": "(args: AvatarComponent) => ({\n  component: AvatarComponent,\n  props: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/control/input/input.stories.ts",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  component: InputComponent,\n  props: args\n})"
            }
        ],
        "functions": [
            {
                "name": "createInitialAuthState",
                "file": "src/app/project/auth/auth.store.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [],
                "returnType": "AuthState"
            },
            {
                "name": "createInitialFilterState",
                "file": "src/app/project/state/filter/filter.store.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [],
                "returnType": "FilterState"
            },
            {
                "name": "createInitialState",
                "file": "src/app/project/state/project/project.store.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [],
                "returnType": "ProjectState"
            },
            {
                "name": "NoWhitespaceValidator",
                "file": "src/app/core/validators/no-whitespace.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            }
        ],
        "typealiases": [
            {
                "name": "Handler",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/project/components/navigation/navbar-left/navbar-left.component.ts",
                "description": "",
                "kind": 162
            }
        ],
        "enumerations": [
            {
                "name": "IssuePriority",
                "childs": [
                    {
                        "name": "LOWEST",
                        "value": "Lowest"
                    },
                    {
                        "name": "LOW",
                        "value": "Low"
                    },
                    {
                        "name": "MEDIUM",
                        "value": "Medium"
                    },
                    {
                        "name": "HIGH",
                        "value": "High"
                    },
                    {
                        "name": "HIGHEST",
                        "value": "Highest"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/interface/issue.ts"
            },
            {
                "name": "IssueStatus",
                "childs": [
                    {
                        "name": "BACKLOG",
                        "value": "Backlog"
                    },
                    {
                        "name": "SELECTED",
                        "value": "Selected"
                    },
                    {
                        "name": "IN_PROGRESS",
                        "value": "InProgress"
                    },
                    {
                        "name": "DONE",
                        "value": "Done"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/interface/issue.ts"
            },
            {
                "name": "IssueType",
                "childs": [
                    {
                        "name": "STORY",
                        "value": "Story"
                    },
                    {
                        "name": "TASK",
                        "value": "Task"
                    },
                    {
                        "name": "BUG",
                        "value": "Bug"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/interface/issue.ts"
            },
            {
                "name": "ProjectCategory",
                "childs": [
                    {
                        "name": "SOFTWARE",
                        "value": "Software"
                    },
                    {
                        "name": "MARKETING",
                        "value": "Marketing"
                    },
                    {
                        "name": "BUSINESS",
                        "value": "Business"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/interface/project.ts"
            }
        ],
        "groupedVariables": {
            "src/app/control/avatar/avatar.stories.ts": [
                {
                    "name": "avatarUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/avatar/avatar.stories.ts",
                    "type": "string",
                    "defaultValue": "'https://res.cloudinary.com/dvujyxh7e/image/upload/c_scale,w_128/v1593253478/trung-vo_bioxmc.png'"
                },
                {
                    "name": "Rounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/avatar/avatar.stories.ts",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Square",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/avatar/avatar.stories.ts",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/avatar/avatar.stories.ts",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "(args: AvatarComponent) => ({\n  component: AvatarComponent,\n  props: args\n})"
                }
            ],
            "src/app/core/directives/autofocus.directive.ts": [
                {
                    "name": "BASE_TIMER_DELAY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/directives/autofocus.directive.ts",
                    "type": "number",
                    "defaultValue": "10"
                }
            ],
            "src/app/project/components/board/index.ts": [
                {
                    "name": "BoardPageComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/components/board/index.ts",
                    "type": "[]",
                    "defaultValue": "[BoardDndComponent, BoardDndListComponent, BoardFilterComponent]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/control/breadcrumbs/breadcrumbs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/breadcrumbs/breadcrumbs.stories.ts",
                    "type": "Story<BreadcrumbsComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/breadcrumbs/breadcrumbs.stories.ts",
                    "type": "Story<BreadcrumbsComponent>",
                    "defaultValue": "(args: BreadcrumbsComponent) => ({\n  component: BreadcrumbsComponent,\n  props: args\n})"
                }
            ],
            "src/app/control/button/button.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/button/button.stories.ts",
                    "type": "Story<ButtonProps>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/button/button.stories.ts",
                    "type": "Story<ButtonProps>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/button/button.stories.ts",
                    "type": "Story<ButtonProps>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/button/button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "({ label, className }: Partial<ButtonProps>) => ({\n  component: ButtonComponent,\n  moduleMetadata: {\n    declarations: [ButtonComponent], // Removed if no template\n    imports: []\n  },\n  template: `<j-button className='${className}'>${label}</j-button>`\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "EnvironmentModel",
                    "defaultValue": "{\n  production: true,\n  apiUrl: '/assets/data' // 'https://clone-angular-api.herokuapp.com'\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "EnvironmentModel",
                    "defaultValue": "{\n  production: false,\n  apiUrl: '/assets/data' // 'http://localhost:3000'\n}"
                }
            ],
            "src/app/control/input/input.stories.ts": [
                {
                    "name": "Flat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/input/input.stories.ts",
                    "type": "Story<InputComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/input/input.stories.ts",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  component: InputComponent,\n  props: args\n})"
                }
            ],
            "src/app/core/services/google-analytics.service.ts": [
                {
                    "name": "GOOGLE_ANALYTICS_ID",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/services/google-analytics.service.ts",
                    "type": "string",
                    "defaultValue": "'UA-80363801-4'"
                },
                {
                    "name": "gtag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/services/google-analytics.service.ts",
                    "type": "any"
                }
            ],
            "src/main.ts": [
                {
                    "name": "initSentry",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.ts",
                    "type": "",
                    "defaultValue": "() => {\n  Sentry.init({\n    dsn: 'https://b2af8332e38f486d910f06b79df66365@o495789.ingest.sentry.io/5569161',\n    autoSessionTracking: true,\n    integrations: [\n      new Integrations.BrowserTracing({\n        tracingOrigins: ['localhost', 'https://.trungk18.com/'],\n        routingInstrumentation: Sentry.routingInstrumentation\n      })\n    ],\n\n    tracesSampleRate: 1.0\n  });\n}"
                }
            ],
            "src/app/interface/issue.ts": [
                {
                    "name": "IssuePriorityColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interface/issue.ts",
                    "type": "object",
                    "defaultValue": "{\n  [IssuePriority.HIGHEST]: '#CD1317',\n  [IssuePriority.HIGH]: '#E9494A',\n  [IssuePriority.MEDIUM]: '#E97F33',\n  [IssuePriority.LOW]: '#2D8738',\n  [IssuePriority.LOWEST]: '#57A55A'\n}"
                },
                {
                    "name": "IssueStatusDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/interface/issue.ts",
                    "type": "object",
                    "defaultValue": "{\n  [IssueStatus.BACKLOG]: 'Backlog',\n  [IssueStatus.SELECTED]: 'Selected for Development',\n  [IssueStatus.IN_PROGRESS]: 'In progress',\n  [IssueStatus.DONE]: 'Done'\n}"
                }
            ],
            "src/app/project/components/issues/index.ts": [
                {
                    "name": "IssueUtilComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/components/issues/index.ts",
                    "type": "[]",
                    "defaultValue": "[\n  IssueCardComponent,\n  IssueLoaderComponent,\n  IssueModalComponent,\n  IssueDetailComponent,\n  IssueTitleComponent,\n  IssueDescriptionComponent,\n  IssueTypeComponent,\n  IssuePriorityComponent,\n  IssueAssigneesComponent,\n  IssueReporterComponent,\n  IssueStatusComponent,\n  IssueCommentsComponent,\n  IssueCommentComponent,\n  IssueDeleteModalComponent\n]"
                }
            ],
            "src/app/control/control.module.ts": [
                {
                    "name": "ControlComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/control/control.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  SvgDefinitionsComponent,\n  SvgIconComponent,\n  BreadcrumbsComponent,\n  ButtonComponent,\n  InputComponent,\n  AvatarComponent\n]"
                }
            ],
            "src/app/project/components/navigation/index.ts": [
                {
                    "name": "NavigationComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/components/navigation/index.ts",
                    "type": "[]",
                    "defaultValue": "[SidebarComponent, NavbarLeftComponent, NavigationComponent]"
                }
            ],
            "src/app/project/config/icons.ts": [
                {
                    "name": "NZ__ICONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/config/icons.ts",
                    "type": "IconDefinition[]",
                    "defaultValue": "[\n  QuestionCircleFill,\n  PlusOutline,\n  SearchOutline,\n  CloseOutline,\n  TwitterOutline,\n  EditOutline\n]"
                }
            ],
            "src/app/project/config/editor.ts": [
                {
                    "name": "quillConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/config/editor.ts",
                    "type": "object",
                    "defaultValue": "{\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'],\n    ['blockquote', 'code-block'],\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    [{ color: [] }, { background: [] }],\n    ['link'],\n    ['clean']\n  ]\n}"
                }
            ],
            "src/app/project/config/sidebar.ts": [
                {
                    "name": "SideBarLinks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/config/sidebar.ts",
                    "type": "[]",
                    "defaultValue": "[\n  new SideBarLink('Kanban Board', 'board', 'board'),\n  new SideBarLink('Project Settings', 'cog', 'settings'),\n  new SideBarLink('Releases', 'ship'),\n  new SideBarLink('Issues and filters', 'filters'),\n  new SideBarLink('Pages', 'page'),\n  new SideBarLink('Reports', 'report'),\n  new SideBarLink('Components', 'component')\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/project/auth/auth.store.ts": [
                {
                    "name": "createInitialAuthState",
                    "file": "src/app/project/auth/auth.store.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [],
                    "returnType": "AuthState"
                }
            ],
            "src/app/project/state/filter/filter.store.ts": [
                {
                    "name": "createInitialFilterState",
                    "file": "src/app/project/state/filter/filter.store.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [],
                    "returnType": "FilterState"
                }
            ],
            "src/app/project/state/project/project.store.ts": [
                {
                    "name": "createInitialState",
                    "file": "src/app/project/state/project/project.store.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [],
                    "returnType": "ProjectState"
                }
            ],
            "src/app/core/validators/no-whitespace.validator.ts": [
                {
                    "name": "NoWhitespaceValidator",
                    "file": "src/app/core/validators/no-whitespace.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/interface/issue.ts": [
                {
                    "name": "IssuePriority",
                    "childs": [
                        {
                            "name": "LOWEST",
                            "value": "Lowest"
                        },
                        {
                            "name": "LOW",
                            "value": "Low"
                        },
                        {
                            "name": "MEDIUM",
                            "value": "Medium"
                        },
                        {
                            "name": "HIGH",
                            "value": "High"
                        },
                        {
                            "name": "HIGHEST",
                            "value": "Highest"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/interface/issue.ts"
                },
                {
                    "name": "IssueStatus",
                    "childs": [
                        {
                            "name": "BACKLOG",
                            "value": "Backlog"
                        },
                        {
                            "name": "SELECTED",
                            "value": "Selected"
                        },
                        {
                            "name": "IN_PROGRESS",
                            "value": "InProgress"
                        },
                        {
                            "name": "DONE",
                            "value": "Done"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/interface/issue.ts"
                },
                {
                    "name": "IssueType",
                    "childs": [
                        {
                            "name": "STORY",
                            "value": "Story"
                        },
                        {
                            "name": "TASK",
                            "value": "Task"
                        },
                        {
                            "name": "BUG",
                            "value": "Bug"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/interface/issue.ts"
                }
            ],
            "src/app/interface/project.ts": [
                {
                    "name": "ProjectCategory",
                    "childs": [
                        {
                            "name": "SOFTWARE",
                            "value": "Software"
                        },
                        {
                            "name": "MARKETING",
                            "value": "Marketing"
                        },
                        {
                            "name": "BUSINESS",
                            "value": "Business"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/interface/project.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/project/components/navigation/navbar-left/navbar-left.component.ts": [
                {
                    "name": "Handler",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/project/components/navigation/navbar-left/navbar-left.component.ts",
                    "description": "",
                    "kind": 162
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/directives/autofocus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AutofocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/directives/autofocus.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BASE_TIMER_DELAY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/google-analytics.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GoogleAnalyticsService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/google-analytics.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GOOGLE_ANALYTICS_ID",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/google-analytics.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gtag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/snow/snow.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/no-whitespace.validator.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "NoWhitespaceValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/comment.ts",
                "type": "class",
                "linktype": "classe",
                "name": "JComment",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/issue-priority-icon.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IssuePriorityIcon",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/issue-type-icon.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IssueTypeWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/issue.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "JIssue",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/issue.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IssuePriorityColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/issue.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IssueStatusDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/project.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "JProject",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/ui-model/delete-issue-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DeleteIssueModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/ui-model/nav-link.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SideBarLink",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interface/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "JUser",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/control/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/control/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "avatarUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Square",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/breadcrumbs/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/control/breadcrumbs/breadcrumbs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/breadcrumbs/breadcrumbs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/control/button/button.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonProps",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/control/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/control/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/control.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ControlComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/control/svg-definitions/svg-definitions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgDefinitionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/control/svg-icon/svg-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/auth/auth.query.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthQuery",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/auth/auth.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/auth/auth.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/auth/auth.store.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "createInitialAuthState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/auth/loginPayload.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoginPayload",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/add-issue-modal/add-issue-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddIssueModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/add-issue-modal/issue-assignees-select/issue-assignees-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueAssigneesSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/add-issue-modal/issue-priority-select/issue-priority-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssuePrioritySelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/add-issue-modal/issue-reporter-select/issue-reporter-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueReporterSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/add-issue-modal/issue-type-select/issue-type-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueTypeSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/board/board-dnd-list/board-dnd-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoardDndListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/board/board-dnd/board-dnd.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoardDndComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/board/board-filter/board-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoardFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/board/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BoardPageComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IssueUtilComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-assignees/issue-assignees.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueAssigneesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-card/issue-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-comment/issue-comment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueCommentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-comments/issue-comments.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueCommentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-delete-modal/issue-delete-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueDeleteModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-description/issue-description.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueDescriptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-detail/issue-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-loader/issue-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-modal/issue-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-priority/issue-priority.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssuePriorityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-reporter/issue-reporter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueReporterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-status/issue-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-status/issue-status.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IssueStatusValueTitle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-title/issue-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/issues/issue-type/issue-type.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueTypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/navigation/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavigationComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/navigation/navbar-left/navbar-left.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/navigation/navbar-left/navbar-left.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/navigation/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/navigation/resizer/resizer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResizerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/navigation/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/search/issue-result/issue-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/search/search-drawer/search-drawer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchDrawerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/project/components/user/user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/config/const.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProjectConst",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/config/editor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "quillConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/config/icons.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NZ__ICONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/config/sidebar.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SideBarLinks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/pages/board/board.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BoardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/pages/full-issue-detail/full-issue-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FullIssueDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/project/pages/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ProjectGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/filter/filter.query.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilterQuery",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/filter/filter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilterService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/filter/filter.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilterStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/filter/filter.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FilterState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/filter/filter.store.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "createInitialFilterState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/project/project.query.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectQuery",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/project/project.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/project/project.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/project/project.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/state/project/project.store.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "createInitialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/utils/date.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DateUtil",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/utils/issue.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IssueUtil",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/work-in-progress/work-in-progress.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkInProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment-model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EnvironmentModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initSentry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}